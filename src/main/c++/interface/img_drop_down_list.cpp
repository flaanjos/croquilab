#include "img_drop_down_list.h"
#include "stdlib.h"
#include <vector>
#include <string>

static char *colors_imglist_bt_press[91] ={"0 128 0","85 85 85","88 88 88","94 94 94","96 96 96","98 98 98","100 100 100","102 102 102","115 115 115","122 122 122","124 124 124","125 125 125","127 231 127","128 128 128","131 224 131","133 133 133","136 136 136","138 241 138","139 139 139","143 143 143","145 145 145","148 148 148","149 149 149","151 151 151","144 144 144","155 155 155","157 157 157","158 222 158","162 162 162","163 163 163","163 213 163","168 168 168","168 243 168","169 233 169","172 172 172","172 203 172","172 243 172","173 173 173","179 179 179","180 180 180","182 182 182","182 201 182","182 214 182","185 185 185","185 191 185","186 239 186","188 188 188","189 222 189","189 242 189","190 190 190","190 240 190","191 191 191","193 193 193","193 206 193","195 195 195","199 199 199","200 214 200","201 201 201","203 203 203","204 236 204","206 206 206","210 210 210","213 213 213","214 229 214","215 215 215","217 217 217","217 240 217","218 218 218","219 219 219","220 220 220","226 236 226","228 228 228","228 237 228","228 242 228","228 243 228","231 231 231","232 242 232","234 239 234","235 235 235","236 236 236","237 242 237","238 238 238","239 239 239","242 242 242","243 243 243","245 245 245","247 247 247","250 250 250","244 244 244","253 253 253","254 254 254" } ;
static unsigned char imglist_bt_press_pix[28*28] = {
 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,15,23,44,57
, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 9,15,51
,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,37, 2,10,25
,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,39, 7,16
,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88, 1,18
,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87, 1,19
,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86, 1,21
,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 1,24
,83,83,83,83,83,83,83,83,83,80,76,73,73,74,73,73,76,80,83,83,83,83,83,83,83,83, 1,26
,82,82,82,82,82,82,82,82,77,66,48,36,32,32,32,36,48,66,77,82,82,82,82,82,82,82, 1,28
,81,81,81,81,81,81,81,81,72,50, 0, 0, 0, 0, 0, 0, 0,50,72,81,81,81,81,81,81,81, 1,31
,79,79,79,79,79,79,79,79,79,45, 0, 0, 0, 0, 0, 0, 0,45,70,79,79,79,79,79,79,79, 1,37
,78,78,78,78,78,78,78,78,78,59,17, 0, 0, 0, 0, 0,17,59,78,78,78,78,78,78,78,78, 1,38
,78,78,78,78,78,78,78,78,78,63,33, 0, 0, 0, 0, 0,33,63,78,78,78,78,78,78,78,78, 1,43
,62,62,62,62,62,62,62,62,62,62,47,12, 0, 0, 0,12,47,62,62,62,62,62,62,62,62,62, 1,49
,62,62,62,62,62,62,62,62,62,62,56,27, 0, 0, 0,27,56,62,62,62,62,62,62,62,62,62, 1,54
,61,61,61,61,61,61,61,61,61,61,61,42,14, 0,14,42,61,61,61,61,61,61,61,61,61,61, 1,55
,60,60,60,60,60,60,60,60,60,60,60,53,30, 0,30,53,60,60,60,60,60,60,60,60,60,60, 1,58
,55,55,55,55,55,55,55,55,55,55,55,55,41,35,41,55,55,55,55,55,55,55,55,55,55,55, 1,60
,51,51,51,51,51,51,51,51,51,51,51,51,51,44,51,51,51,51,51,51,51,51,51,51,51,51, 1,61
,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40, 1,62
,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34, 1,64
,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29, 1,65
,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25, 3,67
,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,13,15,68
,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20, 8, 4,65,69
, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6,18,75,84,54
,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,85,71,46,39
};
static char *colors_imglist_bt[63] =// {"0 0 0","85 85 85","88 88 88","94 94 94","96 96 96","98 98 98","100 100 100","102 102 102","115 115 115","122 122 122","124 124 124","125 125 125","128 128 128","133 133 133","136 136 136","139 139 139","143 143 143","145 145 145","148 148 148","149 149 149","151 151 151","144 144 144","155 155 155","157 157 157","162 162 162","163 163 163","168 168 168","172 172 172","173 173 173","179 179 179","180 180 180","182 182 182","185 185 185","188 188 188","190 190 190","191 191 191","193 193 193","195 195 195","199 199 199","201 201 201","203 203 203","206 206 206","210 210 210","213 213 213","215 215 215","217 217 217","218 218 218","219 219 219","220 220 220","228 228 228","231 231 231","235 235 235","236 236 236","238 238 238","239 239 239","242 242 242","243 243 243","245 245 245","247 247 247","250 250 250","244 244 244","253 253 253","254 254 254"};
{};

static char *colors_imglist_bt_inactive[63] = {"192 192 192","85 85 85","88 88 88","94 94 94","96 96 96","98 98 98","100 100 100","102 102 102","115 115 115","122 122 122","124 124 124","125 125 125","128 128 128","133 133 133","136 136 136","139 139 139","143 143 143","145 145 145","148 148 148","149 149 149","151 151 151","144 144 144","155 155 155","157 157 157","162 162 162","163 163 163","168 168 168","172 172 172","173 173 173","179 179 179","180 180 180","182 182 182","185 185 185","188 188 188","190 190 190","191 191 191","193 193 193","195 195 195","199 199 199","201 201 201","203 203 203","206 206 206","210 210 210","213 213 213","215 215 215","217 217 217","218 218 218","219 219 219","220 220 220","228 228 228","231 231 231","235 235 235","236 236 236","238 238 238","239 239 239","242 242 242","243 243 243","245 245 245","247 247 247","250 250 250","244 244 244","253 253 253","254 254 254"};
//static unsigned char imglist_bt_pix[28*28] =
//{
// 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,20,36,39
//, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 9,13,35
//,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,28, 2,10,22
//,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,30, 7,14
//,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60, 1,15
//,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59, 1,16
//,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58, 1,18
//,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57, 1,21
//,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55, 1,23
//,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54, 1,24
//,53,53,53,53,53,53,53,53,53,53, 0, 0, 0, 0, 0, 0, 0,53,53,53,53,53,53,53,53,53, 1,26
//,44,44,44,44,44,44,44,44,44,44, 0, 0, 0, 0, 0, 0, 0,44,44,44,44,44,44,44,44,44, 1,28
//,51,51,51,51,51,51,51,51,51,51,51, 0, 0, 0, 0, 0,51,51,51,51,51,51,51,51,51,51, 1,29
//,51,51,51,51,51,51,51,51,51,51,51, 0, 0, 0, 0, 0,51,51,51,51,51,51,51,51,51,51, 1,32
//,43,43,43,43,43,43,43,43,43,43,43,43, 0, 0, 0,43,43,43,43,43,43,43,43,43,43,43, 1,34
//,43,43,43,43,43,43,43,43,43,43,43,43, 0, 0, 0,43,43,43,43,43,43,43,43,43,43,43, 1,37
//,42,42,42,42,42,42,42,42,42,42,42,42,42, 0,42,42,42,42,42,42,42,42,42,42,42,42, 1,38
//,41,41,41,41,41,41,41,41,41,41,41,41,41, 0,41,41,41,41,41,41,41,41,41,41,41,41, 1,40
//,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38, 1,41
//,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35, 1,42
//,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31, 1,43
//,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27, 1,44
//,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25, 1,45
//,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22, 3,46
//,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,12,13,47
//,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17, 8, 4,45,48
//, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6,15,50,56,37
//,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,57,49,33,30
//};

static unsigned char imglist_bt_pix[4*14*28] = 
{  

        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0,   0,   0,   0,   2,   0,   0,   0, 153,   0,   0,   0, 223,   0,   0,   0, 215,   0,   0,   0, 206,   0,   0,   0, 197,   0,   0,   0, 189,   0,   0,   0, 180,   0,   0,   0, 173,   0,   0,   0, 178,   0,   0,   0, 186,   0,   0,   0, 193,   0,   0,   0, 201,   0,   0,   0, 209,   0,   0,   0, 216,   0,   0,   0, 225,   0,   0,   0, 153,   0,   0,   0,   2, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0,   0,   0,   0,   1,   0,   0,   0, 153,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 150, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0,   0,   0,   0, 152,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 147, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0,   0,   0,   0, 151,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 144, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0,   0,   0,   0, 151,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 141, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0,   0,   0,   0, 150,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 255,   0,   0,   0, 254,   0,   0,   0, 139, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0,   0,   0,   0, 150,   0,   0,   0, 255,   0,   0,   0, 254,   0,   0,   0, 137, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0,   0,   0,   0, 149,   0,   0,   0, 134, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
        , 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0, 255, 255, 255,   0
};

static void createImgDropDownButtonImages()
{
    Ihandle *image          = IupImageRGBA( 28, 14, (unsigned char*)imglist_bt_pix ) ; 
 //   Ihandle *image_press    = IupImage ( 28, 28, (unsigned char*)imglist_bt_press_pix ) ; 
  //  Ihandle *image_inactive = IupImage ( 28, 28, (unsigned char*)imglist_bt_pix ) ; 

    char color_index[64] ;
    for( int c=0 ; c<63 ; c++ )
    {       
       sprintf( color_index, "%d", c ) ;
       IupSetAttribute( image, color_index, colors_imglist_bt[c] ) ;        
    }
    for( int c=0 ; c<91 ; c++ )
    {
       sprintf( color_index, "%d", c ) ;
   //    IupSetAttribute( image_press, color_index, colors_imglist_bt_press[c] ) ;        
    }
    for( int c=0 ; c<63 ; c++ )
    {
       sprintf( color_index, "%d", c ) ;
    //   IupSetAttribute( image_inactive, color_index, colors_imglist_bt_inactive[c] ) ;        
    }
    IupSetHandle( "ImgDropDownList_bt_img", image ) ;
 //   IupSetHandle( "ImgDropDownList_bt_img_press", image_press ) ;
   // IupSetHandle( "ImgDropDownList_bt_img_inactive", image_inactive ) ;
}


class ImgDropDownListImp
{
public:
   ImgDropDownListImp( const ImgDropDownListContent& content, ImgDropDownList::IDDLcallback cb) ;
   ~ImgDropDownListImp() ;

   Ihandle *box() ;

   int selectedItem() ;
   void selectedItem( int i ) ;
   void active( bool a) ;

   static int cbItem( Ihandle *itm ) ;
   static int cbButton( Ihandle *bt ) ;


   Ihandle *_button ;
   Ihandle *_label ;
   Ihandle *_box ;
   Ihandle *_menu ;
   Ihandle **_itens ;
   std::vector< std::string > _label_images ;

   int _selected_item ;

   ImgDropDownList::IDDLcallback _callback ;

   int _num_itens ;

   static bool _images_created ;
} ;
bool ImgDropDownListImp::_images_created = false ;
int  ImgDropDownListImp::cbItem( Ihandle *itm )
{
   ImgDropDownListImp* panel = (ImgDropDownListImp*)IupGetAttribute( itm, "ImgDropDownList" ) ;
   int key = IupGetInt( itm, IUP_KEY ) ;
   if( panel->_callback )
   {
      if( panel->_callback( key ) )
      {
            panel->selectedItem( key ) ;
      }
   }
   return IUP_DEFAULT ;
}
int  ImgDropDownListImp::cbButton( Ihandle *bt ) 
{
  // IupSetAttribute( bt, IUP_IMAGE, "ImgDropDownList_bt_img_press" ) ;
   ImgDropDownListImp* panel = (ImgDropDownListImp*)IupGetAttribute( bt, "ImgDropDownList" ) ;
   IupPopup( panel->_menu, IUP_MOUSEPOS, IUP_MOUSEPOS ) ;
   IupSetAttribute( bt, IUP_IMAGE, "ImgDropDownList_bt_img" ) ;
   return IUP_DEFAULT ;
}

ImgDropDownListImp::ImgDropDownListImp(const ImgDropDownListContent& content, ImgDropDownList::IDDLcallback cb) 
{
   _num_itens = content._num_itens ;
   if( _num_itens<1 )
      throw ;

   if( !_images_created )
   {
      createImgDropDownButtonImages() ;
      _images_created = true ;
   }

   _callback = cb ;

   _selected_item = 0 ;


   /* CREATING THE MENU */
   _menu = IupMenu( NULL ) ;
   _itens = new Ihandle*[ _num_itens ] ;
   for( int i=0 ; i<_num_itens ; i++ )
   {
      _itens[i] = IupItem( content._list_titles[i], NULL ) ;
      IupSetAttribute( _itens[i], IUP_IMAGE, content._list_images_on[i] ) ;
      IupSetAttribute( _itens[i], IUP_IMPRESS, content._list_images_off[i] ) ;
      IupSetAttribute( _itens[i], IUP_VALUE, IUP_OFF ) ;
      IupSetfAttribute( _itens[i], IUP_KEY, "%d", i ) ;
      IupSetAttribute( _itens[i], IUP_EXPAND, IUP_NO ) ;
      IupSetAttribute( _itens[i], "ImgDropDownList", (char*)this ) ;
      IupSetCallback( _itens[i], IUP_ACTION, (Icallback)cbItem ) ;
      IupAppend( _menu, _itens[i] ) ;

      _label_images.push_back( content._label_images[i] ) ;

   }
   IupSetAttribute( _itens[_selected_item], IUP_VALUE, IUP_ON ) ;

   _button = IupButton( NULL, NULL ) ;
   IupSetAttribute( _button, IUP_EXPAND, IUP_NO ) ;
//   IupSetAttribute( _button, IUP_RASTERSIZE, "28x28" ) ; 
   IupSetAttribute( _button, IUP_IMAGE, "ImgDropDownList_bt_img" ) ;
  // IupSetAttribute( _button, IUP_IMPRESS, "ImgDropDownList_bt_img_press" ) ;
  // IupSetAttribute( _button, IUP_IMINACTIVE, "ImgDropDownList_bt_img_inactive" ) ;
   IupSetAttribute( _button, "FLAT", IUP_YES ) ;
    IupSetAttribute( _button, "ImgDropDownList", (char*)this ) ;
  //  IupSetAttribute( _button, IUP_ACTIVE, IUP_NO ) ;
   IupSetCallback( _button, IUP_ACTION, (Icallback)cbButton ) ;

   _label = IupLabel( NULL ) ;
   IupSetAttribute( _label, IUP_EXPAND, IUP_NO ) ;
   IupSetAttribute( _label, IUP_IMAGE, content._label_images[_selected_item] ) ;

   _box = IupHbox( _label, _button, NULL ) ;
   IupSetAttributes( _box, "MARGIN=5x1, GAP=0, EXPAND=NO, ALIGNMENT=ACENTER" );
}

ImgDropDownListImp::~ImgDropDownListImp()
{
}


Ihandle *ImgDropDownListImp::box()
{
   return _box ;
}


int ImgDropDownListImp::selectedItem()
{
   return _selected_item ;
}
void ImgDropDownListImp::selectedItem( int i )
{
   if( i<0 || i>=_num_itens )
      return ;

   IupSetAttribute( _itens[_selected_item] , IUP_VALUE, IUP_OFF ) ;
   IupSetAttribute( _itens[i] , IUP_VALUE, IUP_ON ) ;
   IupSetAttribute( _label , IUP_IMAGE, (char*)(_label_images[i].c_str()) ) ;
   _selected_item = i ;
}
void ImgDropDownListImp::active( bool a )
{
   IupSetAttribute( _button , IUP_ACTIVE, (a)?IUP_YES:IUP_NO ) ;
}




Ihandle *ImgDropDownList::box()
{
   return _imp->box() ;
}

int ImgDropDownList::selectedItem()
{
   return _imp->selectedItem() ;
}

void ImgDropDownList::selectedItem( int i )
{
   _imp->selectedItem(i);
}


   ImgDropDownList::ImgDropDownList( const ImgDropDownListContent& content, IDDLcallback cb ) 
   {
      _imp = new ImgDropDownListImp( content, cb ) ; 
   }
   ImgDropDownList::~ImgDropDownList() 
   {
      delete _imp ;
   };

   void ImgDropDownList::active( bool a)
   {
      _imp->active( a ) ;
   };